library(ggplot2)
library(boot)
library(dplyr)
nyc_dataset = read.csv("NYPD_Shooting_Incident_Data__Historic__20250130.csv")
nyc_dataset_cleaned = nyc_dataset[, !(names(nyc_dataset) %in% c("LOC_CLASSFCTN_DESC", "LOC_OF_OCCUR_DESC", "LOCATION_DESC"))]
library(ggplot2)
library(boot)
library(dplyr)
nyc_dataset = read.csv("NYPD_Shooting_Incident_Data__Historic__20250130.csv")
nyc_dataset_cleaned = nyc_dataset[, !(names(nyc_dataset) %in% c("LOC_CLASSFCTN_DESC", "LOC_OF_OCCUR_DESC", "LOCATION_DESC"))]
colnames(nyc_dataset_cleaned)
black_victim_count <- sum(nyc_dataset$VIC_RACE == "BLACK", na.rm = TRUE)
print(black_victim_count)
ggplot(nyc_dataset[nyc_dataset$VIC_RACE == "BLACK", ], aes(x = VIC_AGE_GROUP)) +
geom_bar(fill = "lightblue") +
labs(title = "Distribution of Black Victims by Age Group",
x = "Age Group",
y = "Count of Victims") +
theme_minimal()
prop.table(table(nyc_dataset$AGE_GROUP[nyc_dataset$VIC_RACE == "BLACK"]))
total_victims <- nrow(nyc_dataset)
black_victims <- sum(nyc_dataset$VIC_RACE == "BLACK", na.rm = TRUE)
obs_proportion <- black_victims / total_victims
print(obs_proportion)
set.seed(123)
bootstrap_proportion_srs <- function(data, indices) {
sampled_data <- data[sample(nrow(data), 5000 , replace = TRUE), ]
mean(sampled_data$VIC_RACE == "BLACK", na.rm = TRUE)
}
boot_results_srs_black_victim <- boot(data = nyc_dataset_cleaned, statistic = bootstrap_proportion_srs, R = 1000)
obs_proportion <- mean(nyc_dataset_cleaned$VIC_RACE == "BLACK", na.rm = TRUE)
cat("Observed Proportion of Black Victims:", obs_proportion, "\n")
print(boot_results_srs_black_victim)
boot_ci_srs_black_victim <- boot.ci(boot_results_srs_black_victim, type = "perc")
print(boot_ci_srs_black_victim)
hist(boot_results_srs_black_victim$t, main = "Bootstrap Distribution of Black Victims Proportion",
xlab = "Proportion of Black Victims", col = "lightblue", border = "black",
breaks = 30, probability = TRUE)
abline(v = obs_proportion, col = "red", lwd = 2, lty = 2)
lines(density(boot_results_srs_black_victim$t), col = "blue", lwd = 2)
set.seed(123)
nyc_dataset_cleaned$MURDER_FLAG <- ifelse(nyc_dataset$STATISTICAL_MURDER_FLAG == "true", 1, 0)
obs_proportion_murder <- mean(nyc_dataset_cleaned$MURDER_FLAG, na.rm = TRUE)
print(obs_proportion_murder)
bootstrap_proportion_murder <- function(data, indices) {
sampled_data <- data[sample(nrow(data), 5000 , replace=TRUE), ]
mean(sampled_data$MURDER_FLAG, na.rm = TRUE)
}
boot_results_murder <- boot(data = nyc_dataset_cleaned, statistic = bootstrap_proportion_murder, R = 1000)
boot_ci_murder <- boot.ci(boot_results_murder, type = "perc")
print(boot_ci_murder)
hist(boot_results_murder$t, main = "Bootstrap Distribution of Sample Murders Proportion",
xlab = "Proportion of Shootings Resulting in Murder",
col = "lightblue", border = "black", breaks = 30, probability = TRUE)
abline(v = obs_proportion_murder, col = "red", lwd = 2, lty = 2)
lines(density(boot_results_murder$t), col = "blue", lwd = 2)
set.seed(123)
nyc_dataset_cleaned$MURDER_FLAG <- ifelse(nyc_dataset_cleaned$STATISTICAL_MURDER_FLAG == "true", 1, 0)
total_shootings <- nrow(nyc_dataset_cleaned)
prop_murder <- mean(nyc_dataset_cleaned$MURDER_FLAG == 1, na.rm = TRUE)
prop_non_murder <- mean(nyc_dataset_cleaned$MURDER_FLAG == 0, na.rm = TRUE)
cat("Proportion of Shootings with Murder:", prop_murder, "\n")
cat("Proportion of Shootings without Murder:", prop_non_murder, "\n")
obs_diff <-  prop_non_murder - prop_murder
cat("Observed Difference in Proportions:", obs_diff, "\n")
set.seed(123)
bootstrap_diff_murder <- function(data, indices) {
sampled_data <- data[sample(nrow(data), 5000 , replace = TRUE), ]
prop_murder_boot <- mean(sampled_data$MURDER_FLAG == 1, na.rm = TRUE)
prop_non_murder_boot <- mean(sampled_data$MURDER_FLAG == 0, na.rm = TRUE)
return(prop_non_murder_boot - prop_murder_boot)
}
boot_results_diff <- boot(data = nyc_dataset_cleaned, statistic = bootstrap_diff_murder, R = 1000)
boot_ci_diff <- boot.ci(boot_results_diff, type = "perc")
print(boot_ci_diff)
hist(boot_results_diff$t, main = "Bootstrap Distribution of Difference in Proportions",
xlab = "Difference in Proportion (Murder vs. Non-Murder)", col = "lightblue", border = "black",
breaks = 30, probability = TRUE)
abline(v = obs_diff, col = "red", lwd = 2, lty = 2)
lines(density(boot_results_diff$t), col = "blue", lwd = 2)
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("stringi")
install.packages("stringr")
install.packages("stringr")
